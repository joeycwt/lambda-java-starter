buildscript {
    ext {
        kotlinVersion = '1.1.2-2'
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.warnings = true
    options.deprecation = true
    options.compilerArgs += ["-Xlint:all", "-Werror"]
}

jar {
    baseName = "cwt-app"
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"

    compile "io.springfox:springfox-swagger2:2.6.1"
    compile "io.springfox:springfox-swagger-ui:2.6.1"

    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.1.0'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    tagVersion = "latest"
    dockerfile = file('Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
            rename { 'app.jar' }
        }
    }
}

task buildZip(type: Zip) {
    baseName = jar.baseName
    from compileJava
    from compileKotlin
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip
